#  1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
#  Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


def my_fun(arg1, arg2):
    """это ф-ция с позиционными аргументами, мы обязаны передать какие-то значения, чтобы ф-ция отработала"""
    if arg2 == 0:
        print("на 0 делить нельзя")
    else:
        division = round((arg1 / arg2), 2)
        print(f"разница чисел равна: {division}")


my_fun(int(input("введите первое число: ")), int(input("введите второе число: ")))
print('-' * 40, "\n")


#  2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
#  имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
#  как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def my_fu(**kwargs):
    return " ".join(kwargs.values())


print(my_fu(name=input("Введите ваше Имя: "), last_name=input("Введите вашу Фамилию: "),
            birthday=input("Введите вашу дату рождения: "), city=input("Введите ваш город проживания: "),
            email=input("Введите ваше e-mail: "), phone=input("Введите ваше телефон: ")))
print('-' * 40, "\n")

#  --------------------второй вариант решения задачи через позиционные аргументы----------------------------

def my_fu(*args):
    print(" ".join(args))


name = input("Введите ваше Имя: ")
last_name = input("Введите вашу Фамилию: ")
birthday = input("Введите вашу дату рождения: ")
city = input("Введите ваш город проживания: ")
email = input("Введите ваше e-mail: ")
phone = input("Введите ваше телефон: ")

my_fu(name, last_name, birthday, city, email, phone)
print('-' * 40, "\n")

#  3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
#  и возвращает сумму наибольших двух аргументов.

def my_func(arg_1, arg_2, arg_3):
    sum_num = sum([arg_1, arg_2, arg_3])
    min_num = min(arg_1, arg_2, arg_3)
    sum_end = sum_num - min_num
    print(f'сумма двух наибольших числе равна: {sum_end}')

my_func(int(input("введите три числа через Enter: ")), int(input("второе: ")), int(input("и третье: ")))
print('-' * 40, "\n")

#  4. Программа принимает действительное положительное число x и целое отрицательное число y.
#  Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде
#  функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции
#  возведения числа в степень.
#  Подсказка: попробуйте решить задачу двумя способами.
#  Первый — возведение в степень с помощью оператора **.
#  Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

#  -------------------- первый способ---------------------------------
def my_fuu_1(x, y):
     answer = x ** y
     print(f'{x} в степени {y} будет равно: {round(answer, 6)}')


my_fuu_1(int(input("введите положительное число: ")), int(input("и целое отрицательное число: ")))
print('-' * 40, "\n")

#  ---------------------второй способ--------------------------------

def my_fuu_2(x, y):
    y = abs(y)
    count = 1
    result = 1
    while count < y:
        result = x * x
        count += 1
    answer = (1 / result)
    print(f'{x} в степени -{y} будет равно: {round(answer, 6)}')  # не знаю как тут не использовать '**'


my_fuu_2(int(input("введите положительное число: ")), int(input("и целое отрицательное число: ")))
print('-' * 40, "\n")

#  5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
#  выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
#  Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
#  Но если вместо числа вводится специальный символ, выполнение программы завершается.
#  Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
#  к полученной ранее сумме и после этого завершить программу.

def sum_namber():
    sum_item = 0
    while True:
        #  .split() пустые скобки, значит прог может принять неограниченное кол-во пробелов
        user_str = input("Введите строку чисел, через пробел (для выхода 'q'): ").split()
        for item in user_str:
            if item.lower() == 'q':
                return sum_item
            else:
                sum_item += int(item)
        print(f'Сумма чисел = {sum_item}')


print(sum_namber())
print('-' * 40, "\n")

#  6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
#  но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#  Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
#  Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
#  но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def int_func(word):
    return word.title()


print(int_func(input("Введите слово с маленькой буквы: ")))
#  ----------------------вторая часть-----------------------------------
new_list = []
user_str = input("Введите строку слов, начинающихся с маленькой буквы: ").split()
for i in user_str:
    new_list.append(int_func(i))
new_str = " ".join(new_list)
print(new_str)
print('-' * 40, "\n")
