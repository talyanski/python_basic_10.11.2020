#  1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
#  Об окончании ввода данных свидетельствует пустая строка.

name = input("Введите ваше Имя: ")
last_name = input("Введите вашу Фамилию: ")
adress = input("Введите ваш адрес: ")
with open("text_user.txt", "w ", encoding="utf-8") as user_data:
      # user_data.writelines({f"{{name: {name}}}\n{{last_name: {last_name}}}\n{{adress: {adress}}}\n"})
      user_data.writelines({f"{name}\n{last_name}\n{adress}\n"})

#  2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
#  выполнить подсчет количества строк, количества слов в каждой строке.

user_read = open("text_user.txt", encoding="utf-8")
content = user_read.readlines()
line = len(content)
print(f"количество строк: {line}")
for line in content:
      count = len(line.split())
      print(f"количество слов в строке {line}{count}")

user_read.close()

#  3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов.
#  Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
#  Выполнить подсчет средней величины дохода сотрудников.

with open("employees.txt", "r", encoding="utf-8") as wage:
      my_dict = {line.split()[0]: float(line.split()[1]) for line in wage}
      print(f"сотрудники с ЗП меньше 20000руб. {[i[0] for i in my_dict.items() if i[1] < 20000]}\n"
            f"средняя величина дохода сотрудников: {round(sum(my_dict.values()) / len(my_dict), 2)}руб.")

#  4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. При этом английские
# числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.


#  5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
#  Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.


#  6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие
#  лекционных, практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого
#  предмета не обязательно были все типы занятий. Сформировать словарь, содержащий название предмета и общее количество
#  занятий по нему. Вывести словарь на экран.
# Примеры строк файла:
# Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
#
# Пример словаря:
# {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}


#  7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название,
#  форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила
# убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
#
# Подсказка: использовать менеджеры контекста.

